{"version":3,"sources":["constants/routes.js","components/ShowProject.js","components/Home/index.js","components/About/index.js","components/ProjectComponent.js","components/Cipher/index.js","components/MeetPokemon/index.js","components/MDlinks/index.js","components/BurgerQueen/index.js","components/Eternidad/index.js","components/ObraGris/index.js","components/MoviestillProject/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["HOME","ABOUT","CIPHER","MEETPOKEMON","MDLINKS","BURGERQUEEN","ETERNIDAD","OBRAGRIS","MOVIESTILLPROJECT","ShowProject","Component","react_default","a","createElement","className","react_router_dom","to","ROUTES","this","props","route","style","backgroundImage","img","id","name","category","PROJECTS","require","Home","onClick","window","scrollTo","class","color","fontSize","map","project","key","components_ShowProject","About","Container_default","Row_default","Col_default","href","src","alt","ProjectComponent","fluid","noGutters","concat","sm","md","description","frontskills","deliverable","tech","tools","uexd","url","find","console","log","Cipher","components_ProjectComponent","technologies","MeetPokemon","MDlinks","BurgerQueen","Eternidad","ObraGris","MoviestillProject","Navigation","App","App_Navigation","react_router","exact","path","component","HomePage","AboutPage","CipherPage","MeetPokemonPage","MDlinksPage","BurgerQueenPage","EternidadPage","ObraGrisPage","MoviestillPage","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c16146dd.chunk.js","sourcesContent":["export const HOME = \"/\";\nexport const ABOUT = \"/about\";\nexport const CIPHER = \"/cipher\";\nexport const MEETPOKEMON = \"/meetpokemon\";\nexport const MDLINKS = \"/mdlinks\";\nexport const BURGERQUEEN = \"/burgerqueen\";\nexport const ETERNIDAD = \"/eternidad\";\nexport const OBRAGRIS = \"/obragris\";\nexport const MOVIESTILLPROJECT = \"/moviestillproject\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\n\nclass NavDiv extends Component {\n    render(){\n        return (\n    \n        <div className=\"navigation-widget\">\n                {\n                    <p><a href={`#${this.props.name}`}></a>{this.props.name}</p>      \n                }\n        </div>\n        );\n    }\n};\n\n\nclass ShowProject extends Component {\n    render(){\n        return (\n                <div className=\"project-card container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <Link to={ROUTES[this.props.route]}> \n                                <div className=\"project-img\" style={{backgroundImage: \"url(\" + this.props.img + \")\"}}>\n                                <p className=\"project-name\" id=\"project.name\">{this.props.name}</p>\n                                <p>{this.props.category}</p>\n                                </div>\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n\n    )}\n\n}\n\nexport default ShowProject;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes'\nimport ShowProject from '../ShowProject';\n//import Image from 'react-bootstrap/Image'\n\nconst PROJECTS = require('../../data/projects.json');\n\n\n\n    /*  \n    <div className=\"navigation-widget\">\n            <p><a href=\"#ES\"></a>Home</p>\n            {projects.map((project, key)=> (\n                <p><a href={`#${project.name}`}></a>{project.name}</p>\n\n                \n            ))}\n        </div>\n       */\n\n//<img src={projects[0].img} alt=\"imagen\"></img>\n\n\nconst Home = () => (\n    <container className=\"portfolio-container\">\n\n        <div className=\"portfolio-home container-fluid\">\n            <div className=\"row\">\n                <div className=\"col\">\n                        <div className=\"name\">\n                            <h1 id=\"ES\">Elena Silvana</h1>\n                        </div>\n                        <button className=\"go-top\" onClick={()=>{window.scrollTo(0,0)}}><i class=\"material-icons\" style={{color: \"#51256d\", fontSize: \"25px\"}}>arrow_upward</i></button>\n                    <p className=\"text-center\"></p>\n                    <Link className=\"about-botton\"  to={ROUTES.ABOUT}>About</Link>\n                   \n                 </div>\n            </div>\n        </div>\n\n       \n        <div className=\"project-list\">\n        \n            {PROJECTS.map((project, key)=> (\n                <ShowProject\n                    img={project.img}\n                    name={project.name}\n                    category={project.category}\n                    route={project.route}\n                />\n\n            ))}\n        </div>\n       \n\n    </container>\n\n\n);\n\nexport default Home;","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\n//github https://i.postimg.cc/rpr42MkP/Git-Hub-Mark-64px.png\n//linkedin https://i.postimg.cc/cHGns214/makefg.png\n\nconst About = () => (\n    <Container className=\"about-container\">\n        <Row>\n            <Col>\n            <div className=\"about-presentation\">\n                <h1>Hi, are you looking for me?</h1>\n                <p>I’m Elena, I’m a front end developer\n                did you like my work? get in touch</p>\n            </div>\n            <div className=\"about-icons\">\n                <a href=\"https://github.com/elenasilvana\"><img className=\"icons-network\" src=\"https://i.postimg.cc/rpr42MkP/Git-Hub-Mark-64px.png\" alt=\"github-icon\"></img></a>\n                <a href=\"https://www.linkedin.com/in/elena-silvana-c/\"><img className=\"icons-network\" src=\"https://i.postimg.cc/cHGns214/makefg.png\n        \" alt=\"linkedin-icon\"></img></a>\n        <a href=\"https://drive.google.com/open?id=1ZVq1r7mKTM9fWuxjNwwfVLs56i_r8-T2\"><img className=\"icons-network\" src=\"https://www.flaticon.com/premium-icon/icons/svg/1895/1895171.svg\" alt=\"CV icon\"></img></a>\n        </div>\n            </Col>\n        </Row>\n    </Container>\n);\n\nexport default About;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\n/*\n<div class='burger-menu'>\n                            <div class='lateral-bars'>\n                                <span class='center'>MENU</span>\n                            </div>\n                        </div>\n <div className=\"menu-icon\">\n     \n</div>\n*/\n\n    class ProjectComponent extends Component {\n        render(){\n            \n                return (\n                    <Container fluid={false} className=\"meetpokemon-container\">\n                <Row noGutters={true}>\n                    <Col>\n                        <div className=\"menu-icon\">\n                            <i className=\"material-icons\">menu</i>\n                        </div>\n                        <div className={`${this.props.id}-page portada`}>\n                            <h1>{this.props.name}</h1>\n                        </div>\n                       \n                    </Col>\n                </Row>\n                <Row noGutters={true}>\n                    <Col sm={8} md={8} >\n                        <div className={`${this.props.id}-description description`}>\n                            <h3>{this.props.name}</h3>\n                            <p>{this.props.description}</p>\n                            <p>During this project I've learnt about {this.props.frontskills}</p>\n                        </div>\n                    </Col>\n                    <Col sm={4} md={4} >\n                    <div className={`${this.props.id}-details details`}>\n                        <h4>Deliverable</h4>\n                        <p>{this.props.deliverable}</p>\n                        <h4>Technologies </h4>\n                        <p>{this.props.tech}</p>\n                        <p>{this.props.tools}</p>\n                        <h4>UX design</h4>\n                        <p>{this.props.uexd}</p>\n\n                        <h4>Website</h4>\n                        <p><a href={this.props.url}>{this.props.name}</a></p>\n                    </div>\n                    </Col>\n                </Row> \n                </Container>\n            \n                )\n        }\n };\n        \n\n\nexport default ProjectComponent; ","import React from 'react';\nimport ProjectComponent from '../ProjectComponent';\n//project data\nconst PROJECTS = require('../../data/projects.json');\n//secret-cipher\n\nconst project = PROJECTS.find((project)=>{return project.id === \"secret-cipher\"});\nconsole.log(project);\n\nconst Cipher = () => (\n    <div> \n    <ProjectComponent \n\n    description={project.description}\n    name={project.name}\n    deliverable={project.deliverable}\n    url={project.url}\n    id={project.id}\n    tech={project.technologies}\n    tools={project.tools}\n    uexd={project.uexd}\n    frontskills={project.frontskills}\n    \n    />\n</div>\n\n);\n\nexport default Cipher;","import React from 'react';\nimport ProjectComponent from '../ProjectComponent';\n//project data\nconst PROJECTS = require('../../data/projects.json');\n//meet-pokemon\n\n//.description .name .deliverable .url\n//console.log(PROJECTS.find((project)=>{return project.id === \"meet-pokemon\"}));\n\nconst project = PROJECTS.find((project)=>{return project.id === \"meet-pokemon\"});\nconsole.log(project);\n\nconst MeetPokemon = () => (\n    <div> \n        <ProjectComponent \n\n        description={project.description}\n        name={project.name}\n        deliverable={project.deliverable}\n        url={project.url}\n        id={project.id}\n        tech={project.technologies}\n        tools={project.tools}\n        uexd={project.uexd}\n        frontskills={project.frontskills}\n        \n        />\n    </div>\n       // <Container fluid={false} className=\"meetpokemon-container\">\n            \n       // </Container>\n    //))}               \n    \n\n)\n\nexport default MeetPokemon;","import React from 'react';\nimport ProjectComponent from '../ProjectComponent';\n//project data\nconst PROJECTS = require('../../data/projects.json');\n//md-links\n\nconst project = PROJECTS.find((project)=>{return project.id === \"md-links\"});\nconsole.log(project);\n\nconst MDlinks = () => (\n    <div> \n    <ProjectComponent \n\n    description={project.description}\n    name={project.name}\n    deliverable={project.deliverable}\n    url={project.url}\n    id={project.id}\n    tech={project.technologies}\n    tools={project.tools}\n    uexd={project.uexd}\n    frontskills={project.frontskills}\n    \n    />\n</div>\n);\n\nexport default MDlinks;","import React from 'react';\n\nconst BurgerQueen = () => (\n    <div>\n        <h1>Soy el componente de BurgerQueen</h1>\n    </div>\n\n);\n\nexport default BurgerQueen;","import React from 'react';\n\nconst Eternidad = () => (\n    <div>\n        <h1>Soy Eternidad, un proyecto de fotografía</h1>\n    </div>\n\n);\n\nexport default Eternidad;","import React from 'react';\n\nconst ObraGris = () => (\n    <div>\n        <h1>Soy Obra Gris, un proyecto de fotografía</h1>\n    </div>\n\n);\n\nexport default ObraGris;","import React from 'react';\n\nconst MoviestillProject = () => (\n    <div>\n        <h1>Soy Movie Still Project, un proyecto de fotografía</h1>\n    </div>\n\n);\n\nexport default MoviestillProject;","import React from 'react';\nimport { HashRouter as Router, Route} from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes'\n\nimport HomePage from '../Home';\nimport AboutPage from '../About';\n\n//FrontEndProjects\nimport CipherPage from '../Cipher';\nimport MeetPokemonPage from '../MeetPokemon';\nimport MDlinksPage from '../MDlinks';\nimport BurgerQueenPage from '../BurgerQueen';\n\n//Arts projects\nimport EternidadPage from '../Eternidad';\nimport ObraGrisPage from '../ObraGris';\nimport MoviestillPage from '../MoviestillProject';\n\n\n\nfunction App() {\n  return (\n   \n\n    <Router>\n      <Navigation />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route path=\"/about\" component={AboutPage} />\n      <Route path=\"/cipher\" component={CipherPage} />\n      <Route path=\"/meetpokemon\" component={MeetPokemonPage} />\n      <Route path=\"/mdlinks\" component={MDlinksPage} />\n      <Route path=\"/burgerqueen\" component={BurgerQueenPage} />\n      <Route path=\"/eternidad\" component={EternidadPage} />\n      <Route path=\"/obragris\" component={ObraGrisPage} />\n      <Route path=\"/moviestillproject\" component={MoviestillPage} />\n    </Router>\n  );\n};\n\n\nconst Navigation = () => (\n  <div className=\"NavBar\">\n    <nav>\n      <ul>\n        <li>\n        <Link to={ROUTES.ABOUT}>About</Link>\n        </li>\n        <li>\n        <Link to={ROUTES.HOME}>Home</Link>\n        </li>\n        <li>\n        <Link to={ROUTES.CIPHER}>cipher</Link>\n        </li>\n        <li>\n        <Link to={ROUTES.MEETPOKEMON}>meet pokemon</Link>\n        </li>\n      </ul>\n    </nav>\n  </div>\n  );\n  \n  \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}